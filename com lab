import datetime

welcomeName = "Welcome to KENK E-Shoppe :)"
print(welcomeName)

# Initialize dictionaries for items, inventory, users, and sales
items = {}
inventory = {}
users = {"admin": {"password": "adminpass", "role": "Admin"}}  # Store users with roles
sales = []

# Function to register new users
def register_user():
    print("\n--- Register New User ---")
    username = input("Enter new username: ")
    if username in users:
        print("Username already exists. Try another username.")
        return

    password = input("Enter password: ")
    role = input("Enter role (Admin/Cashier/Buyer): ").capitalize()

    if role in ["Admin", "Cashier", "Buyer"]:
        users[username] = {"password": password, "role": role}
        print(f"User '{username}' registered successfully as {role}.\n")
    else:
        print("Invalid role. User registration failed.\n")

# Function to login user
def login():
    print("\n--- Login ---")
    username = input("Enter username: ")
    password = input("Enter password: ")

    if username in users and users[username]["password"] == password:
        print(f"Login successful! Welcome, {username}.")
        return users[username]["role"]
    else:
        print("Invalid credentials.")
        return None

# Add or edit product in the inventory
def add_or_edit_product():
    product_name = input("Enter the product name: ").capitalize()
    if product_name not in items:
        items[product_name] = {}
        inventory[product_name] = {}

    size = input("Enter size (S, M, L): ").upper()
    price = float(input("Enter price: "))
    quantity = int(input("Enter quantity: "))

    items[product_name][size] = price
    inventory[product_name][size] = quantity
    print(f"Product '{product_name}' with size '{size}' has been added/updated.\n")

# Manage users (register, delete)
def manage_users():
    print("\n--- User Management ---")
    print("[1] Register New User")
    print("[2] Delete Existing User")
    choice = input("Choose an option: ")

    if choice == "1":
        register_user()
    elif choice == "2":
        username = input("Enter username to delete: ")
        if username in users:
            del users[username]
            print(f"User '{username}' deleted successfully.\n")
        else:
            print("User not found.\n")
    else:
        print("Invalid option.\n")

# Generate report for inventory, sales, and profit
def generate_report():
    print("\n--- Inventory Report ---")
    for product, sizes in inventory.items():
        print(f"{product}:")
        for size, quantity in sizes.items():
            print(f"  Size {size}: {quantity} units")

    print("\n--- Sales Report ---")
    total_sales = 0
    total_profit = 0
    for sale in sales:
        total_sales += sale["total_cost"]
        total_profit += sale["total_cost"] * 0.2  # Assuming a 20% profit margin

    print(f"Total Sales: ₱{total_sales:.2f}")
    print(f"Total Profit: ₱{total_profit:.2f}")
    print("------------------------\n")

# Process a transaction and update inventory
def process_transaction():
    total_cost = 0
    items_bought = []

    print("\nAvailable Items and Prices (in pesos):")
    for item, sizes in items.items():
        print(f"{item}:")
        for size, price in sizes.items():
            print(f"  Size {size}: ₱{price} (Stock: {inventory[item][size]})")

    while True:
        product_name = input("Enter product name (or 'done' to finish): ").capitalize()
        if product_name.lower() == 'done':
            break
        if product_name not in items:
            print("Invalid product name. Try again.")
            continue

        size = input(f"Enter size for {product_name} (S, M, L): ").upper()
        if size not in items[product_name]:
            print("Invalid size. Try again.")
            continue

        quantity = int(input(f"Enter quantity for {product_name} size {size}: "))
        if quantity > inventory[product_name][size]:
            print("Insufficient stock. Try again.")
            continue

        # Calculate cost and update inventory
        price = items[product_name][size] * quantity
        total_cost += price
        items_bought.append((product_name, size, quantity, price))
        inventory[product_name][size] -= quantity

    # Record sale and generate receipt
    if total_cost > 0:
        sales.append({"items": items_bought, "total_cost": total_cost})
        issue_receipt(items_bought, total_cost)
    else:
        print("No items purchased.")

# Issue receipt for a transaction
def issue_receipt(items_bought, total_cost):
    print("\n--- Receipt ---")
    for item in items_bought:
        print(f"{item[2]}x {item[0]} (Size {item[1]}) - ₱{item[3]:.2f}")
    print(f"Total: ₱{total_cost:.2f}")
    print("Date:", datetime.datetime.now())
    print("----------------")

# Display available items for buyers
def view_items():
    print("\nAvailable Items and Prices (in pesos):")
    for item, sizes in items.items():
        print(f"{item}:")
        for size, price in sizes.items():
            print(f"  Size {size}: ₱{price} (Stock: {inventory[item][size]})")


# Function for buyers to purchase items
def buyer_purchase():
    view_items()
    total_cost = 0
    items_bought = []

    while True:
        product_name = input("Enter the item name (or 'done' to finish): ").capitalize()
        if product_name.lower() == 'done':
            break
        if product_name not in items:
            print("Invalid item name. Please try again.")
            continue

        size = input(f"Enter size for {product_name} (S, M, L): ").upper()
        if size not in items[product_name]:
            print("Invalid size. Please try again.")
            continue

        quantity = int(input(f"How many {product_name} in size {size} would you like to buy? "))
        if quantity > inventory[product_name][size]:
            print("Insufficient stock. Try again.")
            continue

        price = items[product_name][size] * quantity
        total_cost += price
        items_bought.append((product_name, size, quantity, price))
        inventory[product_name][size] -= quantity

    if total_cost > 0:
        sales.append({"items": items_bought, "total_cost": total_cost})
        issue_receipt(items_bought, total_cost)
    else:
        print("No items were purchased.")

# Main function
def main():
    while True:
        print("\n--- Main Menu ---")
        print("[1] Login")
        print("[2] Register New User")
        print("[3] Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            role = login()
            if not role:
                continue

            # Role-specific menus
            while True:
                if role == "Admin":
                    print("\nAdmin Menu:")
                    print("[1] Add/Edit Product")
                    print("[2] User Management")
                    print("[3] Generate Report")
                    print("[4] Logout")
                    option = input("Select an option: ")

                    if option == "1":
                        add_or_edit_product()
                    elif option == "2":
                        manage_users()
                    elif option == "3":
                        generate_report()
                    elif option == "4":
                        print("Logging out.")
                        break
                    else:
                        print("Invalid option. Try again.")

                elif role == "Cashier":
                    print("\nCashier Menu:")
                    print("[1] Process Transaction")
                    print("[2] Logout")
                    option = input("Select an option: ")

                    if option == "1":
                        process_transaction()
                    elif option == "2":
                        print("Logging out.")
                        break
                    else:
                        print("Invalid option. Try again.")

                elif role == "Buyer":
                    print("\nBuyer Menu:")
                    print("[1] View Available Items")
                    print("[2] Buy Items")
                    print("[3] Logout")
                    option = input("Select an option: ")

                    if option == "1":
                        view_items()
                    elif option == "2":
                        buyer_purchase()
                    elif option == "3":
                        print("Logging out.")
                        break
                    else:
                        print("Invalid option. Try again.")

        elif choice == "2":
            register_user()
        elif choice == "3":
            print("Exiting program.")
            break
        else:
            print("Invalid option. Try again.")

if __name__ == "__main__":
    main()
